p(note). Esta página todavía no ha sido traducida al castellano. Si quieres colaborar con nosotros y ayudar con la traducción lee nuestra "guía para colaborar con la traducción de play":translation.

h1. Ajax con Play framework

Play le permite realizar pedidos HTTP utilizando Ajax, y por defecto viene integrado con "jQuery":http://jquery.com. En este capítulo le contamos cuál es la manera más efectiva de utizar "jQuery":http://jquery.com desde el framework.

El framework también trae el tag @jsAction@, que le permite obtener de manera transparente la denición del método desde el controlador.

h2. <a name="jsaction">Usando jQuery con el tag jsAction</a>

El tag @#{jsAction /}@ retorna una función Javascript que contruye el correspondiente URL basado en la acción definida en el servidor y las variables que le pasemos como parámetro. No efectúa la llamada AJAX, esto lo deberemos realizar nosotros manualmente utilizando el URL retornado.

Veamos un ejemplo:

bc. GET     /hotels/list        Hotels.list

Now you can import this route client side:

bc. <script type="text/javascript">
   var listAction = #{jsAction @list(':search', ':size', ':page') /}
   $('#result').load(
       listAction({search: 'x', size: '10', page: '1'}), 
       function() {
           $('#content').css('visibility', 'visible')
       }
   )
</script>

In this example we are requesting the list method from the default Application controller. We are also passing three parameters: search, size and page. The request we perform is then saved into the listAction variable. Now using jQuery and the @load@ function we are performing a request (an HTTP GET request in fact).

In fact, the following request is sent:

bc. GET /hotels/list?search=x&size=10&page=1

In that case the request returns HTML data.

However, it is also possible to return JSON or XML and to have jQuery interpret the data. In your controller, use the appropriate render method (renderJSON, renderXML or an XML template).

Please refer to the "jQuery":http://docs.jquery.com/Main_Page documentation for more info.

Also please note that we could perform a POST; the jQuery method should then be changed to:

bc. $.post(listAction(), function(data) {
  $('#result').html(data);
});

p(note). **Continuing the discussion**
 
Handle %(next)"Internationalization":i18n%.
