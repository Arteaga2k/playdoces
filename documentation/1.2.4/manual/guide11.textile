h1. Preparando la puesta en producción

En este momento que hemos terminado el sistema de blog, vamos a ver los pocos pasos necesarios para poner una aplicación Play en producción.

h2. <a>Definiendo un framework ID</a>

Normalmente usted desplegará su apliación en una computadora (un servidor) diferente al que utilizó para el desarrollo. Por lo tanto tendrá una instalación diferente de Play.

Play permite asignar a cada instalación del framework un ID diferente, para después manejar configuraciones diferentes en el mismo archivo @application.conf@. Vamos a decir que el @server01@ hospedará su aplicación en producción.

Una vez que el framework Play sea instalado en ese servidor, vamos a definir el framework ID usando el comando @play id@. Escriba:

bc. $ play id

Y asigne @server01@ como el id. Ahora podemos definir claves especiales en el archivo de configuración de yabe que seran utilizadas solo cuando la aplicación se esté ejecutando en el servidor.

h2. <a>Configurando la aplicación en modo PROD</a>

La primera clave de configuración que queremos definir para el despliegue en el servidor es la propiedad @application.mode@. Desde el principio hemos utilizado el modo **DEV** que permite a Play recargar y recompilar en vivo los archivos Java y mostrar mensajes detallados cuando ocurre un error. En modo **PROD** sin embargo, Play compilará todas los fuentes Java y las plantillas al arrancar la aplicación y nunca revisará si hay cambios.

En el archivo @yabe/conf/application.conf@, defina:

bc. %server01.application.mode=PROD

Ahora cuando ejecute la aplicación yabe en el servidor, automáticamente arrancará en modo **PROD**.

h2. <a>Configurando un servidor MySQL</a>

En producción, utilizaremos un servidor MySQL como servidor de base de datos en vez de la base de datos en memoria H2 que hemos usado desde el principio. Play viene con el driver JDBC para MySQL así que no necesitamos instalar más nada.

Edite la configuración de la base de datos en el archivo @yabe/conf/application.conf@:

bc. %server01.db=mysql:root:secret@yabe

Ahora ajustaremos la forma en que Hibernate maneja el esquema de la base de datos por nosotros. Es muy útil cuando Hibernate automáticamente actualiza el esquema de la base de datos a medida que los objetos Java del modelo cambian.

Cambie la clave de configuración @jpa.ddl@:

bc. %server01.jpa.ddl=update

Sin embargo esto es en cierta forma impredecible, y ejecutar cosas mágicas en una base de datos de producción nunca es bueno. Por lo tanto siempre debería hacer un respaldo antes de un nuevo despliegue. Si no quiere que Hibernate actualice su base de datos, cambie la clave de configuración @jpa.ddl@ a @validate@:

bc. %server01.jpa.ddl=validate

h2. <a>Configurando un servidor HTTP frontal</a>

Ahora podríamos solo cambiar el puerto por defecto del servidor HTTP integrado a 80 con el fin de tener un servidor de producción verdadero. Sin embargo esto nos limitará a instalar una sola aplicación Play en un servidor dado. Como normalmente queremos instalar varias aplicaciones en el mismo servidor (pero utilizando diferentes nombres de dominio), necesitamos usar un servidor HTTP frontal como proxy invertido.

Puede elegir cualquier servidor HTTP y configurarlo como proxy invertido, sin embargo generalmente es una buena elección buscar algo rápido y ligero como "LIGHTTPD":http://www.lighttpd.net/. 

La configuración exacta de LIGHTTPD está más allá del ámbito de este tutorial, pero debería ser algo como esto:

bc. server.modules = (
      "mod_access",
      "mod_proxy",
      "mod_accesslog" 
)
…
$HTTP["host"] =~ "www.yabe.com" {
    proxy.balance = "round-robin" proxy.server = ( "/" =>
        ( ( "host" => "127.0.0.1", "port" => 9000 ) ) )
}

Y después permitir que un proxy invertido local se conecte a su aplicación Play agregando esta clave al archivo @application.conf@:

bc. %server01.XForwardedSupport=127.0.0.1

h2. <a>Esto es solo el principio</a>

p(note). Si ha leido y seguido este tutorial, usted ahora es un desarrollador Play experto. Conoce la mayoría de los conceptos para el desarrollo de aplicaciones Play.
 
 En esta etapa, es posible que desee continuar el tutorial con %(next)"Internacionalización y localización":guide12%.

Todavía hay más características que no hemos explorado aún, especialmente las relacionadas con los servicios Web, como JSON o XML. Play también viene con más modulos que proveen más características. Y el mismo Play aún evoluciona cada día.

Si estás convencido que Play te ayudará a ahorrar tiempo en tu próxima aplicación web Java, ahora ya estás listos para empezar. Y no dudes en hacernos cualquier pregunta en el "Grupo Google de Play - Latinoamérica":http://groups.google.com/group/play-latam.
 
**¡Gracias!**
