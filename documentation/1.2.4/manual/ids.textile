h1. Administrar application.conf en múltiples entornos

Cuando trabajas en un equipo, diferentes desarrolladores usan diferentes parámetros de configuración en el archivo @application.conf@. Por ejemplo, el nivel de log o alguna configuración de la base de datos. Esto generalmente lleva a conflictos recurrentes cuando actualizas la aplicación en tu sistema de control de versiones.

Además, diferentes entornos de despliegue - por ejemplo desarrollo, pruebas, transición y producción - necesitan diferente configuración.

h2. <a name="id">El ID del Framework</a>

Para resolver este problema, Play te permite asignar un **ID** para cada instalación del framework. Usa el comando @id@ de la línea de comando de play para definir éste ID:

bc. play id

!images/id!

De esta forma puedes anteponer las llaves de tu configuración con el ID del framework para el cual la configuración está destinada:

bc. application.name=Cool app
application.mode=dev
application.log=INFO
 
# Configuration for gbo
%gbo.application.log=DEBUG
%gbo.db=mem
 
# Configuration for src
%scr.http.port=9500
 
# Production configuration
%prod.http.port=80
%prod.application.log=INFO
%prod.application.mode=prod

h2. <a name="command">Estableciendo el ID del framework desde la línea de comandos</a>

Puedes especificar el ID del framework a usar para una instalación particular directamente al iniciar el servidor. Por ejemplo para ejecutar la aplicación en modo de producción puedes usar:

bc. play run --%production

con estas lineas definidas en el archivo @application.conf@:

bc. application.mode=dev
%production.application.mode=prod

De esta forma Play usa todos los parámetros que tienen un ID de framework específico. El ID por defecto sigue estando definido usando el comando @play id@.

Por cierto, @play test@ es entonces equivalente a:

bc. play run --%test

p(note). **Continuar con la discusión**
 
Ahora podemos avanzar a %(next)"Despliegue en producción":production%.
