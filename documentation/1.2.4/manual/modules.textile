h1. Módulos de Play! framework

Una aplicación de Play puede estar compuesta por múltiples módulos. De esta manera, puede reutilizar componentes de una aplicación entre varias aplicaciones, u organizar una aplicación compleja en varias aplicaciones más simples.

h2. <a name="what">¿Qué es un módulo?</a>

Un módulo es simplemente una aplicación estándar de Play. Sin embargo existen algunas diferencias en la manera en que se cargan los recursos de un módulo:

* Un módulo no tiene un archivo @conf/application.conf@.
* Un módulo puede contar con un archivo de rutas en @conf/routes@, pero estas rutas no serán cargadas de manera automática por el framework.
* Todos los archivos son primero buscados en el aplicación principal, y luego en los archivos de los módulos cargados. 
* Un módulo puede contener código java distribuido como un archivo JAR en la carpeta module/lib.
* Un módulo puede incluir su propia página de documentación.
* TODO en un módulo es opcional. 

Puede crear un módulo con el comando @play new-module@.

h2. <a name="loading">Cómo cargar un módulo desde una aplicación</a>

Los módulos son automáticamente cargados desde el directorio @/modules@ de la aplicación principal. Tambien pueden utilizar el "sistema de administración de dependencias":dependency para cargar automáticamente los módulos de su aplicación.

h2. <a name="routes">Cargar las rutas por defecto de un módulo</a>

Un módulo puede proveer un archivo @routes@ con las rutas por defecto. Puede cargarlas en el archivo @routes@ de la aplicación principal de la siguiente manera: 

bc. # Importar las rutas por defecto del módulo CRUD
GET     /admin	     module:crud

Puede incluso cargar las rutas de todos los módulos disponibles:

bc. GET     /	     module:*

h2. <a name="documentation">Agregar documentación a un módulo</a>

Puede agregar una página de documentación a un módulo simplemente creando un archivo @documentation/manual/home.textile@ dentro de la carpeta del módulo. Utilice la sintaxis de los archivos Textile, tal como lo hace play para su propia documentación en @${play.path}/documentation/manual/@.

Si está ejecutando una aplicación de Play que utiliza uno o más módulos con documentación, entonces la documentación local de play que puede consultar en "http://localhost:9000/@documentation":http://localhost:9000/@documentation incluirá los correspondientes links a las páginas de su documentación en la barra lateral bajo el rótulo de *Installed Modules*.

h2. <a name="repository">Utilizando el repositorio de módulos</a>

El "repositorio de módulos":http://www.playframework.org/modules cuenta con todos los módulos que han sido contribuidos por la comunidad. Un módulo puede tener múltiples versiones. Debe verificar la documentación del módulo para saber qué versión corresponde a la versión del framework que actualmente está utilizando. 

También puede consultar el repositorio de módulos mediante el comando @play list-modules@. 

bc. gbo-mac:~ guillaume$ play list-modules
~        _            _ 
~  _ __ | | __ _ _  _| |
~ | '_ \| |/ _' | || |_|
~ |  __/|_|\____|\__ (_)
~ |_|            |__/   
~
~ play! 1.2, http://www.playframework.org
~
~ You can also browse this list online at http://www.playframework.org/modules
~
~ [bespin]
~   Bespin online editor
~   http://www.playframework.org/modules/bespin
~   Versions: 1.0, 1.0.1
~
~ [cobertura]
~   Cobertura
~   http://www.playframework.org/modules/cobertura
~   Versions: 1.0
...

Puede instalar un módulo de manera local utilizando en comando @play install {module}-{version}@. Al instalar un módulo localmente podrá utilizarlo desde múltiples aplicaciones sin tener que instalar una nueva copia en cada aplicación. Esto es útil para módulos grandes que se comportan como extensiones al propio framework más que como extensiones a su aplicación. 

Por ejemplo, para instalar el módulo que provee soporte para Scala, utilice:

bc. play install scala-head

Por convención, la versión @head@ es la versión inestable del módulo. Puede instalar la versión por defecto de un módulo omitiendo especificar la versión. Por ejemplo:

bc. play install scala

Los módulos instalados de esta manera son descargados y grabados en la carpeta @/modules@ del directorio de instalación del framework. 

Puede cambiar el directorio de instalación utilizando la opción @--path@:

bc. play install gwt --path=my-project

h2. <a name="contributing">Contribuyendo con un nuevo módulo al repositorio</a>

h3. <a name="prerequisites">Prerequisitos</a>

Para registrar un nuevo módulo debe cumplir con los siguientes requisitos:

# Una cuenta de Google, para poder enviar un mensaje a la lista de discusión de Play. 
# Una cuenta OpenID para ingresar como desarrollador (puede utilizar su cuenta de Google)
# Un nombre para el módulo que respete la expresión regular <code>[a-zA-Z]+</code>.
# El módulo debe incluir su propia "documentación":#documentation. 
# Una página web donde se encuentre disponible el código del módulo así como algún medio para reportar errores, por ejemplo un proyecto en <a href="http://github.com/">GitHub</a>, <a href="http://code.google.com/">Google Code</a> or <a href="http://launchpad.net/">Launchpad</a>.

h3. <a name="register">Registrando el módulo</a>

Para poder utilizar su cuenta de Google como su OpenId, necesita descubir el URL completo de la siguiente manera:

# Diríjase a "http://www.playframework.org/modules":http://www.playframework.org/modules, en _Developer login_ ingrese @https://www.google.com/accounts/o8/id@ y haga click en el botón _Login_.
# Ingrese utilizando su cuenta de Google. 
# Anote el URL completo de su cuenta OpenId que se encuentra debajo de _Developer login_, por ejemplo @https://www.google.com/accounts/o8/id?id=BItOawk7q69CFhRarQIo@

Envíe un mensaje solicitando registrar su nuevo módulo a la "lista de discusión de Play":https://groups.google.com/forum/#!forum/play-framework. Por ejemplo:

bc. Subject: Module registration request: {module name}
 
Module name:
jqueryui
 
Display name:
jQuery UI
 
Description:
Working examples of jQuery UI widgets, integrated with a Play application.
 
Project home page:
https://github.com/hilton/jqueryui-module
 
OpenID:
https://www.google.com/accounts/o8/id?id=BItOawk7q69CFhRarQIo

Una vez que su módulo haya sido registrado, puede publicar una versión.

h3. <a name="release">Publicando su módulo</a>

Para publicar su módulo:

# especifique la versión de su módulo en la primera línea del archivo @conf/dependency.yml@, por ejemplo @self: play -> jqueryui 1.0@
# compile el módulo con el comando @play build-module@
# ingrese a "http://www.playframework.org/modules":http://www.playframework.org/modules bajo el rótulo _Developer login_
# navegue hasta la página de su módulo, a través del link en "http://www.playframework.org/modules/developers":http://www.playframework.org/modules/developers bajo el rótulo _Your modules_
# Suba el archivo ZIP situado en la carpeta @dist/@ de su módulo, utilizando el fomulario bajo el rótulo de _Manage module releases_

Por supuesto que puede utilizar la lista de discusión de Play para proveer ayuda y compartir información y novedades acerca de su trabajo.

p(note). **Próximos pasos**

Aprenda a gestionar eficientemente sus módulos utilizando la herramienta de %(next)"Administración de dependencias":dependency%.
